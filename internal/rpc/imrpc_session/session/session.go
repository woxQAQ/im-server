// Code generated by goctl. DO NOT EDIT.
// Source: session.proto

package session

import (
	"context"

	"github.com/woxQAQ/im-service/internal/rpc/imrpc_session/pb/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	InitSessionByGroupIdRequest = pb.InitSessionByGroupIdRequest
	InitSessionByUsersIdRequest = pb.InitSessionByUsersIdRequest
	InitSessionResponse         = pb.InitSessionResponse
	ResponseBase                = pb.ResponseBase

	Session interface {
		InitSessionByUsersId(ctx context.Context, in *InitSessionByUsersIdRequest, opts ...grpc.CallOption) (*InitSessionResponse, error)
		InitSessionByGroupId(ctx context.Context, in *InitSessionByGroupIdRequest, opts ...grpc.CallOption) (*InitSessionResponse, error)
	}

	defaultSession struct {
		cli zrpc.Client
	}
)

func NewSession(cli zrpc.Client) Session {
	return &defaultSession{
		cli: cli,
	}
}

func (m *defaultSession) InitSessionByUsersId(ctx context.Context, in *InitSessionByUsersIdRequest, opts ...grpc.CallOption) (*InitSessionResponse, error) {
	client := pb.NewSessionClient(m.cli.Conn())
	return client.InitSessionByUsersId(ctx, in, opts...)
}

func (m *defaultSession) InitSessionByGroupId(ctx context.Context, in *InitSessionByGroupIdRequest, opts ...grpc.CallOption) (*InitSessionResponse, error) {
	client := pb.NewSessionClient(m.cli.Conn())
	return client.InitSessionByGroupId(ctx, in, opts...)
}
