syntax = "proto3";
package seq;
option go_package = "/pb";

message RespBase{
    int32 err_code = 1;
    string err_msg = 2;
    string err_dlt = 3;
}

enum OperationType {
    // get session-space sequence id
    OPERATION_TYPE_SESSION = 0;

    // get user-space sequence id
    // OPERATION_TYPE_UID = 1;

    // get group-session-space sequence id
    // equals with session 
    OPERATION_TYPE_GID = 2;

    // get user id
    // OPERATION_TYPE_GETUID = 3;

    // get group id
    // OPERATION_TYPE_GETGID = 4;
    // todo: more operation...
}

message GetSeqRequest {
    int64 session_id = 1;
    OperationType type = 2;
}

message GetSeqResponse {
    RespBase base = 1;
    int64 cur_seq = 2;
    // int64 user_id = 3;
    OperationType type = 4;
    // int64 group_id = 5;
    // uint32 max_seq = 3;
}

// message SetDefaultSeqRequest {
//     string user_id = 1;
// }

// message SetDefaultSeqResponse {
//     string cur_seq = 1;
//     int32 err_code = 2;
//     string err_msg = 3;
//     string err_dlt = 4;
// }


service Seq {
    rpc GetSessionSeq(GetSeqRequest) returns (GetSeqResponse);
    // rpc SetDefaultSeq(SetDefaultSeqRequest) returns (SetDefaultSeqResponse);
}