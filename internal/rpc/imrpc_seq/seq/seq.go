// Code generated by goctl. DO NOT EDIT.
// Source: seq.proto

package seq

import (
	"context"

	"github.com/woxQAQ/im-service/internal/rpc/imrpc_seq/pb/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetSeqRequest  = pb.GetSeqRequest
	GetSeqResponse = pb.GetSeqResponse
	RespBase       = pb.RespBase

	Seq interface {
		GetSessionSeq(ctx context.Context, in *GetSeqRequest, opts ...grpc.CallOption) (*GetSeqResponse, error)
	}

	defaultSeq struct {
		cli zrpc.Client
	}
)

func NewSeq(cli zrpc.Client) Seq {
	return &defaultSeq{
		cli: cli,
	}
}

func (m *defaultSeq) GetSessionSeq(ctx context.Context, in *GetSeqRequest, opts ...grpc.CallOption) (*GetSeqResponse, error) {
	client := pb.NewSeqClient(m.cli.Conn())
	return client.GetSessionSeq(ctx, in, opts...)
}
