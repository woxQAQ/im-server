type (
	// login may be via email or mobile phone number
	// userId should not be a approach.
	// In my system, username can be repeated
	LoginRequest {
		Method   int    `json:"method"` // mobile 0 and Email 1, more method can be supported further
		user_id   string `json:"userId"`
		Mobile   string `json:"mobile"`
		Email    string `json:"email"`
		Password string `json:"password"`
		Validate string `json:"validate"`
	}
	// whatever method you login, you will get token and expiretime
	LoginResp {
		Token    string `json:"token"`
		ExpireAt int64  `json:"expireAt"`
	}
	RegisterRequest {
		Method int    `json:"method"`
		Name   string `json:"name"`
		Email  string `json:"email"`
		Mobile string `json:"mobile"`
		// due to some KNOWN purposes, the mobile is a basic
		// information to get almost any service in some place.
		// this must cause invasion to persion privacy and restrict freedom of speech
		// so in my project, mobile is not a necessary field to get our service
		Gender   string `json:"gender"`
		Password string `json:"password"`
	}
	RegisterResp {
		Id int64 `json:"id"`
	}
	UserInfoResp {
		Id     int64  `json:"id"`
		Name   string `json:"name"`
		Email  string `json:"email"`
		Mobile string `json:"mobile"`
		Gender string `json:"gender"`
	}
	ModifyRequest {
		Id     int64  `json:"id"`
		Name   string `json:"name"`
		Email  string `json:"email"`
		Mobile string `json:"mobile"`
		Gender string `json:"gender"`
	}
)

@server (
	prefix: /v1
)
service User {
	@handler Login
	post /api/user/login (LoginRequest) returns (LoginResp)

	@handler Register
	post /api/user/register (RegisterRequest) returns (RegisterResp)
}

@server (
	jwt:    Auth
	prefix: /v1
)
service User {
	@handler UserInfo
	post /api/user/userinfo returns (UserInfoResp)

	@handler ModifyInfo
	post /api/user/modifyinfo (ModifyRequest)
}

